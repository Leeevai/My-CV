#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <math.h>


char Camp[27][80]={
        {' ',' ',' ','a',' ',' ','b',' ',' ','c',' ',' ','d',' ',' ','e',' ',' ','f',' ',' ','g',' ',' ','h',' ',' ','i',' ',' ','j',' ',' ','k',' ',' ','l',' ',' ','m',' ',' ','n',' ',' ','o',' ',' ','p',' ',' ','q',' ',' ','r',' ',' ','s',' ',' ','t',' ',' ','u',' ',' ','v',' ',' ','w',' ',' ','x',' ',' ','y',' ',' ','z','\0'},
        {'a',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'b',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'c',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'d',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'e',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'f',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'g',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'h',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'i',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'j',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'k',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'l',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'m',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'n',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'o',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'p',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'q',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'r',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'s',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'t',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'u',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'v',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'w',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'x',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'y',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'z',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'}



    },
    devCamp[27][80]={
        {' ',' ',' ','a',' ',' ','b',' ',' ','c',' ',' ','d',' ',' ','e',' ',' ','f',' ',' ','g',' ',' ','h',' ',' ','i',' ',' ','j',' ',' ','k',' ',' ','l',' ',' ','m',' ',' ','n',' ',' ','o',' ',' ','p',' ',' ','q',' ',' ','r',' ',' ','s',' ',' ','t',' ',' ','u',' ',' ','v',' ',' ','w',' ',' ','x',' ',' ','y',' ',' ','z','\0'},
        {'a',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'b',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'c',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'d',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'e',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'f',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'g',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'h',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'i',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'j',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'k',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'l',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'m',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'n',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'o',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'p',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'q',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'r',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'s',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'t',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'u',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'v',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'w',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'x',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'y',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'},
        {'z',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0',' ',' ','0','\0'}



    },place='0',x,y,O;

int mines,blank=0,end=0,moves=0,diff[6][2]={{67,305},{135,270},{202,223},{230,169},{260,151},{290,99}},difficulty=0;

void setDifficulty();
char random();
void displayCamp();
int yPosition(char a);
int xPosition(char a);
void devMode();
void setCamp();
void getMove();
void displayStats();
void setBlock();
int win();
void game();
void setDefault();
void blankCleaner(int i,int j);


void main()
{
    game();
}
void setDifficulty()
{
    printf("\n1.Noob\n2.Easy\n3.Medium\n4.Classic\n5.Hard\n6.Godmode\n\nSelect difficulty:");
    scanf("%d",&difficulty);
    difficulty--;
}
void setDefault()
{
    for(int i='a';i<='z';i++)
    {
        for(int j='a';j<='z';j++)
        {
            devCamp[yPosition(i)][xPosition(j)]='0';
            Camp[yPosition(i)][xPosition(j)]='0';
        }
    }
}



void game()
{
    int a;
    system("@cls||clear");
    printf("WELCOME TO MINESWEEPER v0.18.7\n");
    setDifficulty();
    mines=diff[difficulty][0];
    setCamp();

    do
    {
        
        do
        {
            printf("\n1.Rules\n2.Game\n3.Exit\n");
            scanf("%d",&a);
        }while (a<1||a>3);
        if(a==1)
        {       
            printf("Minesweeper is a game where mines are hidden in a grid of squares. \nSafe squares have numbers telling you how many mines touch the square. \nYou can use the number clues to solve the game by opening all of the safe squares. \nIf you click on a mine you lose the game!\n");
            printf("Minesweeper always makes the first click safe(maybe :D).\nYou open squares with the left mouse button and put flags on mines with the right mouse button. \nPressing the right mouse button again changes your flag into a questionmark. \nWhen you open a square that does not touch any mines, it will be empty and the adjacent squares will automatically open in all directions until reaching squares that contain numbers. \nA common strategy for starting games is to randomly click until you get a big opening with lots of numbers.\n");
            printf("If you flag all of the mines touching a number, chording on the number opens the remaining squares. \nChording is when you press both mouse buttons at the same time. \nThis can save you a lot of work! \nHowever, if you place the correct number of flags on the wrong squares, chording will explode the mines.\n");
        }
    }while (a!=2);
    
    do
    {
        system("@cls||clear");

        displayCamp();
        displayStats();
        if(moves<10&&moves%2==0&&difficulty>3)
        {
            srand(time(0));
            char sa,sb;
            do
            {
                sa=random();
                sb=random();
            }while(devCamp[yPosition(sa)][xPosition(sb)]!=' ');
            if(rand()%2==0)
            {
                printf("(%c,%c) seems safe!\n",sb,sa);
            }
            else
            {
                printf("(%c,%c) seems safe!\n",sb,sa);
                place='1';
            }
        }
        
        getMove();

        if(moves==0&&devCamp[yPosition(y)][xPosition(x)]=='.')
        {
            do
            {
                setDefault();
                setCamp();
            } while (devCamp[yPosition(y)][xPosition(x)]=='.');
            
        }
        
        if(Camp[yPosition(y)][xPosition(x)]!='0')
        {
            do
            {
                getMove();
            } while (Camp[yPosition(y)][xPosition(x)]!='0');
            
        }
        else if(O=='?')
        {
            if(devCamp[yPosition(y)][xPosition(x)]=='.')
            {
                devMode();
                printf("**********************************************\n\nGAME OVER NOOOOOBIE!!!\n");
                displayStats();
                if(place=='1')
                    printf("LMFAO MAG G  GOTCHA REAL BAD\nHAHAHHAHAHAHAHAH\nRULE #1:TRUST NO ONE MATE !\nloooser.");
                printf("\nCreator: Hassan Mohsen\n@hsnmohsen_\n\n**********************************************\n");
                end=1;
            }
            else
            {
                Camp[yPosition(y)][xPosition(x)]=devCamp[yPosition(y)][xPosition(x)];
                if(Camp[yPosition(y)][xPosition(x)]==' ')
                {
                    blank++;
                    blankCleaner(y,x);
                }
            }
        }
        else if(O=='!')
        {
            if(Camp[yPosition(y)][xPosition(x)]=='!')
            {
                Camp[yPosition(y)][xPosition(x)]='0';
                mines++;
            }
            else 
            {
                mines--;
                Camp[yPosition(y)][xPosition(x)]='!';
            }
            
        }
        moves++;
        
    }while(win());

    if(end!=1)
    {
        displayCamp();
        printf("**********************************************\n\nGAME OVER NOOOOOBIE!!!\n");
        displayStats();
        printf("\nCreator: Hassan Mohsen\n@hsnmohsen_\n\n**********************************************\n");
        
    }
        
        
}


void displayCamp()
{
    int i,j;
    for(i=0;i<27;i++)
    {
        for( j=0;j<80;j++)
        {
            printf("%c",Camp[i][j]);
        }
        printf("\n");
    }
}



void devMode()
{
    int i,j;
    for(i=0;i<27;i++)
    {
        for( j=0;j<80;j++)
        {
            printf("%c",devCamp[i][j]);
        }
        printf("\n");
    }
}


int win()
{
    if(end==1)
        return 0;
    int cM=0,eM=0,i,j;
    for(i='a';i<='z';i++)
    {
        for(j='a';j<='z';j++)
        {
            if(Camp[yPosition(i)][xPosition(j)]=='!')
            {
                if(devCamp[yPosition(i)][xPosition(j)]!='.')
                    eM++;
                cM++;
            }

        }
    }
    return(cM==mines&&eM==0)?0:1;
}


int xPosition(char a)
{
    return 3*(a-'a'+1);
}


int yPosition(char a)
{
    return (a-'a'+1);
}


char random()
{
    return rand()%('z'-'a'+1)+'a';
}



void setCamp()
{
    int i,iy,ix,m;
    char a,b;
    for (i=0,m=0;i<diff[difficulty][0];m=0,i++)
    {
        do
        {
            m=0;
            a=random();
            b=random();
            for(iy=a-1;iy<=a+1;iy++)
            {
                for(ix=b-1;ix<=b+1;ix++)
                {
                    if(devCamp[yPosition(iy)][xPosition(ix)]!='.'&&devCamp[yPosition(iy)][xPosition(ix)]!=' ')
                        m++;
                }
            }
            
        }while(devCamp[yPosition(a)][xPosition(b)]!='0'||m==0||(devCamp[yPosition(a)][xPosition(b)]>='3'&&m<4)||(devCamp[yPosition(a-1)][xPosition(b)]=='.'&&devCamp[yPosition(a+1)][xPosition(b)]=='.')||(devCamp[yPosition(a)][xPosition(b-1)]=='.'&&devCamp[yPosition(a)][xPosition(b+1)]=='.'));
        devCamp[yPosition(a)][xPosition(b)]='.';
    }
    for (int i=0;i<diff[difficulty][1];i++)
    {
        do
        {
            a=random();
            b=random();
            
        }while(devCamp[yPosition(a)][xPosition(b)]!='0');
        devCamp[yPosition(a)][xPosition(b)]=' ';
    }
    setBlock();

    
}



void getMove()
{ 
    do
    {
        printf("(x,y,!-?): ");
        fflush(stdin);
        scanf("%c %c %c",&x,&y,&O); 
    } while ((x>'z'||x<'a')||(y>'z'||y<'a')||(O!='!'&&O!='?'));

    
    
    
}



void displayStats()
{
    printf("Total:%d\tMines:%d\tBlank:%d    Moves:%d\t\n",26*26,mines,blank,moves);
}


void setBlock()
{
    int i,j,i1,j1,m;
    for(i='a';i<='z';i++)
    {
        for(j='a',m=0;j<='z';j++,m=0)
        {
            for(i1=i-1;i1<=i+1;i1++)
            {
                for(j1=j-1;j1<=j+1;j1++)
                {
                    if(devCamp[yPosition(i1)][xPosition(j1)]=='.'&&(i1!=i||j1!=j))
                        m++;
                }
            }
            if(devCamp[yPosition(i)][xPosition(j)]!=' '&&devCamp[yPosition(i)][xPosition(j)]!='.')
            {
                if(m==0)
                {
                    devCamp[yPosition(i)][xPosition(j)]=' ';
                }
                else
                {
                    devCamp[yPosition(i)][xPosition(j)]=m+'0';
                }
            }

        }

    }
    for(i='a';i<='z';i++)
    {
        for(j='a';j<='z';j++)
        {
            if(devCamp[yPosition(i)][xPosition(j)]=='0')
                devCamp[yPosition(i)][xPosition(j)]=' ';
        }
    }
}


void blankCleaner(int i,int j)
{
    if(devCamp[yPosition(i)][xPosition(j)]==' ')
    {
        Camp[yPosition(i)][xPosition(j)]=' ';

        if(i!='a'&&devCamp[yPosition(i-1)][xPosition(j)]==' '&&Camp[yPosition(i-1)][xPosition(j)]=='0')
            blankCleaner(i-1,j);

        if(i!='z'&&devCamp[yPosition(i+1)][xPosition(j)]==' '&&Camp[yPosition(i+1)][xPosition(j)]=='0')
            blankCleaner(i+1,j);

        if(j!='a'&&devCamp[yPosition(i)][xPosition(j-1)]==' '&&Camp[yPosition(i)][xPosition(j-1)]=='0')
            blankCleaner(i,j-1);

        if(j!='z'&&devCamp[yPosition(i)][xPosition(j+1)]==' '&&Camp[yPosition(i)][xPosition(j+1)]=='0')
            blankCleaner(i,j+1);



//used this for limital exploration.
        if(rand()%2&&i!='a'&&devCamp[yPosition(i-1)][xPosition(j)]!='.'&&Camp[yPosition(i-1)][xPosition(j)]=='0')
            Camp[yPosition(i-1)][xPosition(j)]=devCamp[yPosition(i-1)][xPosition(j)];

        if(rand()%2&&i!='z'&&devCamp[yPosition(i+1)][xPosition(j)]!='.'&&Camp[yPosition(i+1)][xPosition(j)]=='0')
            Camp[yPosition(i+1)][xPosition(j)]=devCamp[yPosition(i+1)][xPosition(j)];

        if(rand()%2&&j!='a'&&devCamp[yPosition(i)][xPosition(j-1)]!='.'&&Camp[yPosition(i)][xPosition(j-1)]=='0')
            Camp[yPosition(i)][xPosition(j-1)]=devCamp[yPosition(i)][xPosition(j-1)];

        if(rand()%2&&j!='z'&&devCamp[yPosition(i)][xPosition(j+1)]!='.'&&Camp[yPosition(i)][xPosition(j+1)]=='0')
            Camp[yPosition(i)][xPosition(j+1)]=devCamp[yPosition(i)][xPosition(j+1)];

    }


}